{"remainingRequest":"C:\\Users\\Elisa\\ttt-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Elisa\\ttt-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Elisa\\ttt-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Elisa\\ttt-master\\src\\components\\Game.vue?vue&type=template&id=6ca3af22&scoped=true&","dependencies":[{"path":"C:\\Users\\Elisa\\ttt-master\\src\\components\\Game.vue","mtime":1595395313920},{"path":"C:\\Users\\Elisa\\ttt-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Elisa\\ttt-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Elisa\\ttt-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Elisa\\ttt-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"info\" }, [\n      _c(\"label\", { attrs: { for: \"fname\" } }, [_vm._v(\"Scalable\")]),\n      _c(\"br\"),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.fieldSize,\n            expression: \"fieldSize\"\n          }\n        ],\n        attrs: { id: \"fname\", name: \"fname\" },\n        domProps: { value: _vm.fieldSize },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.fieldSize = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"b\", { staticClass: \"notes\" }, [\n        _vm._v(\"Notes: please fill the bank with number\")\n      ]),\n      _c(\"br\"),\n      _c(\"b\", { staticClass: \"notes\" }, [\n        _vm._v(\"example: if you input 3, make the box 3x3\")\n      ]),\n      _c(\"br\"),\n      _c(\"h3\", [_vm._v(_vm._s(_vm.activePlayer) + \"'s turn\")]),\n      _c(\"h3\", [_vm._v(\"Turn #\" + _vm._s(_vm.numTurns))]),\n      _c(\"br\"),\n      _c(\n        \"button\",\n        {\n          on: {\n            click: function($event) {\n              return _vm.resetGame()\n            }\n          }\n        },\n        [_vm._v(\"Reset Game\")]\n      )\n    ]),\n    !_vm.running\n      ? _c(\"div\", { staticClass: \"win\" }, [\n          _vm.winner\n            ? _c(\"h1\", [\n                _vm._v(\n                  \"Player \" +\n                    _vm._s(_vm.winner) +\n                    \" won after \" +\n                    _vm._s(_vm.numTurnsForPlayer(_vm.winner)) +\n                    \" turns!\"\n                )\n              ])\n            : _c(\"h1\", [_vm._v(\"Draw!\")])\n        ])\n      : _vm._e(),\n    _vm.state\n      ? _c(\n          \"div\",\n          { staticClass: \"field\" },\n          [\n            _vm._l(_vm.state, function(row, i) {\n              return _vm._l(row, function(col, j) {\n                return _c(\"Box\", {\n                  key: _vm.boxId(i, j),\n                  attrs: {\n                    fieldSize: _vm.fieldSize,\n                    playerInfo: _vm.getPlayer(i, j)\n                  },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.boxClicked(i, j)\n                    }\n                  }\n                })\n              })\n            })\n          ],\n          2\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}